//brute force approach code 

int maxArea(vector<int>& height) {
        int maxWater = 0;

        for(int i=0; i<height.size(); i++) {
            for(int j=i+1; j<height.size(); j++) {
                int W = j - i;
                int ht = min(height[i], height[j]);
                int currWater = W * ht;

                maxWater = max(maxWater, currWater);
            }
        }
        return maxWater;
    }

//optimal approach (2 pointer)

int maxArea(vector<int>& height) {
        int maxWater = 0;
        int lp=0, rp=height.size()-1;

        while(lp < rp) {
            int W = rp - lp;
            int ht = min(height[lp], height[rp]);
            int currWater = W * ht;
            maxWater = max(maxWater, currWater);
             
            height[lp] < height[rp] ? lp++ : rp--;
        }
        return maxWater;
    }
